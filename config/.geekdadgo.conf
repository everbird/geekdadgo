[app]
# debug = true
debug = false
output_filename_format = "img_{source}_frame{i:04d}_{tag}_{dt_text}.png"

###
# Tesseract mode informaiton
###
# Page segmentation modes (psm):
#  0    Orientation and script detection (OSD) only.
#  1    Automatic page segmentation with OSD.
#  2    Automatic page segmentation, but no OSD, or OCR. (not implemented)
#  3    Fully automatic page segmentation, but no OSD. (Default)
#  4    Assume a single column of text of variable sizes.
#  5    Assume a single uniform block of vertically aligned text.
#  6    Assume a single uniform block of text.
#  7    Treat the image as a single text line.
#  8    Treat the image as a single word.
#  9    Treat the image as a single word in a circle.
# 10    Treat the image as a single character.
# 11    Sparse text. Find as much text as possible in no particular order.
# 12    Sparse text with OSD.
# 13    Raw line. Treat the image as a single text line,
#       bypassing hacks that are Tesseract-specific.
###
# OCR Engine modes (oem):
#  0    Legacy engine only.
#  1    Neural nets LSTM engine only.
#  2    Legacy + LSTM engines.
#  3    Default, based on what is available.

[ocr.date]
oem = 3
psm = 7
whitelist = ",0123456789ABCDEFGJLMNOPRSTUVY"
blacklist = "HIKQWXZabcdefghijklmnopqrstuvwxyz"
x = 20
y = 0
width = 205
height = 55

[ocr.time]
oem = 3
psm = 7
whitelist = ",:APM0123456789"
blacklist = "BCDEFGHIJKLNOQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
x = 640
y = 110
width = 160
height = 55

[key-frame-scan]
# How many frames to skip once found a "key" frame to extract
jump = 15
# Point(x, y) to check if it's a "key" frame
x = 30
y = 20
# y = 25
# Pixels off the next day to cut off when an image contains multiple days
crop_offset = 10

# Stitch long images and aggregate multiple activities in the same day
[stitch-scan]
# How many frames to skip to scan for the next image to stitch
jump = 30
# jump = 25  # May stitch too much times and stitched image looks vague
# jump = 50  # May miss some dates but stitch would be more clear if stitched successfully

# Cut off borders and such to only left the interested content
[screen-crop]
x = 30
y = 260
width = 830
height = 1400

# Header is the yellow label with date information on the left to distinguish images for different day
[header-detect]
# Pixels to skip for the next one once found a "header"
jump = 47  # 42(header height)+5(margin)
x = 30  # keep it the same as [key-frame-scan].x
y = 20  # keep it the same as [key-frame-scan].y
# y = 25  # keep it the same as [key-frame-scan].y

# Trying to ignore unexpected loading animation. Doesn't really work as expected tho : (
[loading-detect]
x = 320  # 350-30
y = 625  # 885-260
width = 180
height = 180

# Color range to detect header
[colors.header]
r=[ 253, 255 ]
g=[ 245, 253 ]
b=[ 224, 247 ]

# Color range to detect border
[colors.border]
r=[ 185, 235 ]
g=[ 180, 220 ]
b=[ 60, 180 ]

[colors.loading]
r=[ 200, 252 ]
g=[ 200, 252 ]
b=[ 200, 242 ]
